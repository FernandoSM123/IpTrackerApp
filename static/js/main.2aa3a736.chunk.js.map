{"version":3,"sources":["images/icon-arrow.svg","images/icon-location.svg","App.js","reportWebVitals.js","index.js"],"names":["icon","L","Icon","iconUrl","locationIcon","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","App","props","inputRef","React","createRef","state","ipData","ipAddress","dataObtained","getInputIP","bind","newIP","this","current","value","setState","getIP","a","url","axios","get","response","window","setTimeout","data","console","log","status","className","type","placeholder","ref","onClick","title","src","arrowIcon","alt","renderIpInfo","renderMapInfo","loading","bgColor","spinnerColor","textColor","text","error","reason","ip","country_name","region","city","postal","timezone","org","MapContainer","center","latitude","longitude","zoom","scrollWheelZoom","TileLayer","attribution","Marker","position","Popup","renderMainInfo","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2aa3a736.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","export default __webpack_public_path__ + \"static/media/icon-location.7e6459d2.svg\";","import './App.css';\nimport arrowIcon from './images/icon-arrow.svg';\nimport locationIcon from './images/icon-location.svg';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport LoadingScreen from 'react-loading-screen';\n//Leaflet\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\n\nconst icon = new L.Icon({\n  iconUrl: locationIcon,\n  iconSize: [46, 56],\n  shadowSize: [50, 64],\n  iconAnchor: [22, 94],\n  shadowAnchor: [4, 62],\n  popupAnchor: [-3, -76]\n});\n\nclass App extends Component {\n\n  inputRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      ipData: null,\n      ipAddress: '',\n      dataObtained: false\n    }\n    this.getInputIP = this.getInputIP.bind(this);\n  }\n\n  getInputIP() {\n    let newIP = this.inputRef.current.value;\n    this.setState({\n      ipAddress: newIP,\n      dataObtained: false\n    }, () => {\n      //actualizar info con nueva IP\n      this.getIP();\n    });\n  }\n\n  componentDidMount() {\n    this.getIP();\n  }\n\n  async getIP() {\n    //var url = \"http://ip-api.com/json/\" + this.state.ipAddress;\n    var url = \"https://ipapi.co/\" + this.state.ipAddress + \"/json/\";\n\n    const response = await axios.get(url);\n    window.setTimeout(() => this.setState({\n      ipData: response.data,\n      dataObtained: true\n    }, () => {\n      console.log(\"=== FULL RESPONSE ===\");\n      console.log(response);\n      console.log(\"=== DATA NEEDED ===\");\n      console.log(this.state.ipData);\n    }), 3000);\n  }\n\n\n  async getIP2() {\n    var url = \"http://ip-api.com/json/\" + this.state.ipAddress;\n\n    const response = await axios.get(url);\n    window.setTimeout(() => this.setState({\n      ipData: response.data,\n      dataObtained: true\n    }, () => {\n      console.log(\"=== FULL RESPONSE ===\");\n      console.log(response);\n      console.log(\"=== DATA NEEDED ===\");\n      console.log(this.state.ipData);\n      console.log(\"=== STATUS ===\");\n      console.log(this.state.ipData.status);\n    }), 3000);\n  }\n\n  renderMainInfo() {\n    if (this.state.dataObtained) {\n      return <div className=\"MainContainer\">\n        {/*header */}\n        <header>\n          <div className=\"headerWrapper\">\n            <h1>IP Address Tracker</h1>\n            <div className=\"inputBox\">\n              <input type=\"text\" placeholder=\"Search for any IP address or domain\" ref={this.inputRef}></input>\n              <div>\n                <button onClick={this.getInputIP} title=\"Search\"><img src={arrowIcon} alt=\"arrow\"></img></button>\n              </div>\n            </div>\n\n            {/*Show ipData*/}\n            {this.renderIpInfo()}\n          </div>\n        </header>\n        {/* section */}\n        <section>\n          {this.renderMapInfo()}\n        </section>\n\n        {/* footer */}\n        <footer>\n          <p>created by <u>FernandoSM123</u> - FrontMentor.io</p>\n        </footer>\n      </div>\n    }\n    else {\n      return <LoadingScreen\n        loading={true}\n        bgColor='#f1f1f1'\n        spinnerColor='#000000'\n        textColor='#000000'\n        text='Loading'\n      >\n      </LoadingScreen>\n    }\n  }\n\n  renderIpInfo() {\n    if (this.state.ipData.error) {\n      return <div className=\"errorBox\">\n        <h3>Error</h3>\n        <p className=\"errorText\">Reason: {this.state.ipData.reason}</p>\n        <p className=\"errorText\">IP: {this.state.ipData.ip}</p>\n      </div>\n    }\n    else {\n      return <div className=\"infoBox\">\n        <div>\n          <h2>ip address</h2>\n          <p>{this.state.ipData.ip}</p>\n        </div>\n\n        <div>\n          <h2>location<br /></h2>\n          <p>\n            {this.state.ipData.country_name},<br />\n            {this.state.ipData.region},<br />\n            {this.state.ipData.city},<br />\n            {this.state.ipData.postal}\n          </p>\n        </div>\n\n        <div>\n          <h2>timezone</h2>\n          <p>{this.state.ipData.timezone}</p>\n        </div>\n\n        <div>\n          <h2>isp</h2>\n          <p>{this.state.ipData.org}</p>\n        </div>\n      </div>\n    }\n  }\n\n  renderMapInfo() {\n    if (this.state.ipData.error) {\n      return <div className=\"noMapBox\">\n        <div>\n          <h3>No map available to display</h3>\n        </div>\n      </div>\n    }\n    else {\n      return <MapContainer center={[this.state.ipData.latitude, this.state.ipData.longitude]} zoom={13} scrollWheelZoom={false}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <Marker position={[this.state.ipData.latitude, this.state.ipData.longitude]} icon={icon}>\n          <Popup>\n            Current Location\n          </Popup>\n        </Marker>\n      </MapContainer>\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        {this.renderMainInfo()}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}